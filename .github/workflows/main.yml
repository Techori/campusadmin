name: Deploy Fullstack App on EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: |
            backend/package-lock.json
            Frontend/package-lock.json
            Admin/package-lock.json

      # ------------------------------
      # BACKEND SETUP
      # ------------------------------
      - name: Install backend dependencies
        working-directory: ./backend
        run: npm install

      - name: Start backend with PM2
        working-directory: ./backend
        run: |
          /home/ubuntu/.nvm/versions/node/v22.16.0/bin/pm2 restart backend || \
          /home/ubuntu/.nvm/versions/node/v22.16.0/bin/pm2 start server.js --name backend

      # ------------------------------
      # FRONTEND SETUP
      # ------------------------------
      - name: Clean npm cache & remove existing dependencies
        working-directory: ./Frontend
        run: |
          rm -rf node_modules package-lock.json
          npm cache clean --force

      - name: Install frontend dependencies
        working-directory: ./Frontend
        run: npm install

      - name: Build frontend
        working-directory: ./Frontend
        run: npm run build

      - name: Deploy frontend to Nginx
        run: |
          sudo rm -rf /var/www/html/*
          sudo cp -r ./Frontend/dist/* /var/www/html/

      # ------------------------------
      # ADMIN FRONTEND SETUP
      # ------------------------------
      # - name: Install admin dependencies
      #   working-directory: ./Admin
      #   run: |
      #     rm -rf node_modules package-lock.json
      #     npm cache clean --force
      #     npm install

      # - name: Build admin panel
      #   working-directory: ./Admin
      #   run: npm run build

      # - name: Deploy admin to Nginx (subdomain)
      #   run: |
      #     sudo rm -rf /var/www/admin/*
      #     sudo cp -r ./Admin/dist/* /var/www/admin/
